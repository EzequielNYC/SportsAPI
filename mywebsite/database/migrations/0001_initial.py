# Generated by Django 4.2.5 on 2023-10-04 18:16

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GiantsData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, db_column='date', null=True)),
                ('opponent', models.TextField(blank=True, db_column='opponent', null=True)),
                ('result', models.TextField(blank=True, db_column='result', null=True)),
                ('giants_score', models.IntegerField(blank=True, db_column='mets_score', null=True)),
                ('opponent_score', models.IntegerField(blank=True, db_column='opponent_score', null=True)),
                ('location', models.TextField(blank=True, db_column='location', null=True)),
                ('total_wins', models.IntegerField(blank=True, db_column='total_wins', null=True)),
                ('total_losses', models.IntegerField(blank=True, db_column='total_losses', null=True)),
                ('divisional_wins', models.IntegerField(blank=True, db_column='divisional_wins', null=True)),
                ('divisional_losses', models.IntegerField(blank=True, db_column='divisional_losses', null=True)),
            ],
            options={
                'db_table': 'giants_data',
            },
        ),
        migrations.CreateModel(
            name='JetsData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, db_column='date', null=True)),
                ('opponent', models.TextField(blank=True, db_column='opponent', null=True)),
                ('result', models.TextField(blank=True, db_column='result', null=True)),
                ('jets_score', models.IntegerField(blank=True, db_column='mets_score', null=True)),
                ('opponent_score', models.IntegerField(blank=True, db_column='opponent_score', null=True)),
                ('location', models.TextField(blank=True, db_column='location', null=True)),
                ('total_wins', models.IntegerField(blank=True, db_column='total_wins', null=True)),
                ('total_losses', models.IntegerField(blank=True, db_column='total_losses', null=True)),
                ('divisional_wins', models.IntegerField(blank=True, db_column='divisional_wins', null=True)),
                ('divisional_losses', models.IntegerField(blank=True, db_column='divisional_losses', null=True)),
            ],
            options={
                'db_table': 'jets_data',
            },
        ),
        migrations.CreateModel(
            name='KnicksData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, db_column='date', null=True)),
                ('opponent', models.TextField(blank=True, db_column='opponent', null=True)),
                ('result', models.TextField(blank=True, db_column='result', null=True)),
                ('knicks_score', models.IntegerField(blank=True, db_column='mets_score', null=True)),
                ('opponent_score', models.IntegerField(blank=True, db_column='opponent_score', null=True)),
                ('location', models.TextField(blank=True, db_column='location', null=True)),
                ('total_wins', models.IntegerField(blank=True, db_column='total_wins', null=True)),
                ('total_losses', models.IntegerField(blank=True, db_column='total_losses', null=True)),
                ('divisional_wins', models.IntegerField(blank=True, db_column='divisional_wins', null=True)),
                ('divisional_losses', models.IntegerField(blank=True, db_column='divisional_losses', null=True)),
            ],
            options={
                'db_table': 'knicks_data',
            },
        ),
        migrations.CreateModel(
            name='MetsData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, db_column='date', null=True)),
                ('opponent', models.TextField(blank=True, db_column='opponent', null=True)),
                ('result', models.TextField(blank=True, db_column='result', null=True)),
                ('mets_score', models.IntegerField(blank=True, db_column='mets_score', null=True)),
                ('opponent_score', models.IntegerField(blank=True, db_column='opponent_score', null=True)),
                ('location', models.TextField(blank=True, db_column='location', null=True)),
                ('total_wins', models.IntegerField(blank=True, db_column='total_wins', null=True)),
                ('total_losses', models.IntegerField(blank=True, db_column='total_losses', null=True)),
                ('divisional_wins', models.IntegerField(blank=True, db_column='divisional_wins', null=True)),
                ('divisional_losses', models.IntegerField(blank=True, db_column='divisional_losses', null=True)),
            ],
            options={
                'db_table': 'mets_data',
            },
        ),
        migrations.CreateModel(
            name='NetsData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, db_column='date', null=True)),
                ('opponent', models.TextField(blank=True, db_column='opponent', null=True)),
                ('result', models.TextField(blank=True, db_column='result', null=True)),
                ('nets_score', models.IntegerField(blank=True, db_column='mets_score', null=True)),
                ('opponent_score', models.IntegerField(blank=True, db_column='opponent_score', null=True)),
                ('location', models.TextField(blank=True, db_column='location', null=True)),
                ('total_wins', models.IntegerField(blank=True, db_column='total_wins', null=True)),
                ('total_losses', models.IntegerField(blank=True, db_column='total_losses', null=True)),
                ('divisional_wins', models.IntegerField(blank=True, db_column='divisional_wins', null=True)),
                ('divisional_losses', models.IntegerField(blank=True, db_column='divisional_losses', null=True)),
            ],
            options={
                'db_table': 'nets_data',
            },
        ),
        migrations.CreateModel(
            name='YankeesData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, db_column='date', null=True)),
                ('opponent', models.TextField(blank=True, db_column='opponent', null=True)),
                ('result', models.TextField(blank=True, db_column='result', null=True)),
                ('yankees_score', models.IntegerField(blank=True, db_column='mets_score', null=True)),
                ('opponent_score', models.IntegerField(blank=True, db_column='opponent_score', null=True)),
                ('location', models.TextField(blank=True, db_column='location', null=True)),
                ('total_wins', models.IntegerField(blank=True, db_column='total_wins', null=True)),
                ('total_losses', models.IntegerField(blank=True, db_column='total_losses', null=True)),
                ('divisional_wins', models.IntegerField(blank=True, db_column='divisional_wins', null=True)),
                ('divisional_losses', models.IntegerField(blank=True, db_column='divisional_losses', null=True)),
            ],
            options={
                'db_table': 'yankees_data',
            },
        ),
    ]
